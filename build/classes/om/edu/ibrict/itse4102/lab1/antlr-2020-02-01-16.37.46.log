2020-02-01 16:37:46:722 grammar LogManager.java:25 before: (LEXER_GRAMMAR MiniJLexer (@ lexer header {
package om.edu.ibrict.itse4102.lab1;
}) (RULES (RULE INT (BLOCK (ALT 'int'))) (RULE PUBLIC (BLOCK (ALT 'public'))) (RULE RETURN (BLOCK (ALT 'return'))) (RULE STATIC (BLOCK (ALT 'static'))) (RULE WHILE (BLOCK (ALT 'while'))) (RULE DECIMAL_LITERAL (BLOCK (ALT (BLOCK (ALT '0') (ALT [1-9] (? (BLOCK (ALT Digits)))))))) (RULE LPAREN (BLOCK (ALT '('))) (RULE RPAREN (BLOCK (ALT ')'))) (RULE LBRACE (BLOCK (ALT '{'))) (RULE RBRACE (BLOCK (ALT '}'))) (RULE SEMI (BLOCK (ALT ';'))) (RULE COMMA (BLOCK (ALT ','))) (RULE ASSIGN (BLOCK (ALT '='))) (RULE NOTEQUAL (BLOCK (ALT '!='))) (RULE MOD (BLOCK (ALT '%'))) (RULE IDENTIFIER (BLOCK (ALT Letter (* (BLOCK (ALT LetterOrDigit)))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT WhiteSpace)))) skip))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') (LEXER_ACTION_CALL channel HIDDEN)))) (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) (LEXER_ACTION_CALL channel HIDDEN)))) (RULE Digits (RULEMODIFIERS fragment) (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE LetterOrDigit (RULEMODIFIERS fragment) (BLOCK (ALT Letter) (ALT [0-9]))) (RULE Letter (RULEMODIFIERS fragment) (BLOCK (ALT [a-zA-Z$_]))) (RULE LineTerminator (RULEMODIFIERS fragment) (BLOCK (ALT '\r') (ALT '\n') (ALT '\r\n'))) (RULE WhiteSpace (RULEMODIFIERS fragment) (BLOCK (ALT LineTerminator) (ALT [ \t\f])))))
2020-02-01 16:37:46:739 grammar LogManager.java:25 after: (LEXER_GRAMMAR MiniJLexer (@ lexer header {
package om.edu.ibrict.itse4102.lab1;
}) (RULES (RULE INT (BLOCK (ALT 'int'))) (RULE PUBLIC (BLOCK (ALT 'public'))) (RULE RETURN (BLOCK (ALT 'return'))) (RULE STATIC (BLOCK (ALT 'static'))) (RULE WHILE (BLOCK (ALT 'while'))) (RULE DECIMAL_LITERAL (BLOCK (ALT (BLOCK (ALT '0') (ALT [1-9] (? (BLOCK (ALT Digits)))))))) (RULE LPAREN (BLOCK (ALT '('))) (RULE RPAREN (BLOCK (ALT ')'))) (RULE LBRACE (BLOCK (ALT '{'))) (RULE RBRACE (BLOCK (ALT '}'))) (RULE SEMI (BLOCK (ALT ';'))) (RULE COMMA (BLOCK (ALT ','))) (RULE ASSIGN (BLOCK (ALT '='))) (RULE NOTEQUAL (BLOCK (ALT '!='))) (RULE MOD (BLOCK (ALT '%'))) (RULE IDENTIFIER (BLOCK (ALT Letter (* (BLOCK (ALT LetterOrDigit)))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT WhiteSpace)))) skip))) (RULE COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '/*' (* (BLOCK (ALT .))) '*/') (LEXER_ACTION_CALL channel HIDDEN)))) (RULE LINE_COMMENT (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) (LEXER_ACTION_CALL channel HIDDEN)))) (RULE Digits (RULEMODIFIERS fragment) (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE LetterOrDigit (RULEMODIFIERS fragment) (BLOCK (ALT Letter) (ALT [0-9]))) (RULE Letter (RULEMODIFIERS fragment) (BLOCK (ALT [a-zA-Z$_]))) (RULE LineTerminator (RULEMODIFIERS fragment) (BLOCK (ALT '\r') (ALT '\n') (ALT '\r\n'))) (RULE WhiteSpace (RULEMODIFIERS fragment) (BLOCK (ALT LineTerminator) (ALT [ \t\f])))))
2020-02-01 16:37:46:901 action-translator LogManager.java:25 translate 
package om.edu.ibrict.itse4102.lab1;

